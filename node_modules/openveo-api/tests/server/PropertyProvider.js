"use strict"

var path = require("path");
var assert = require("chai").assert;

// Set module root directory
process.rootAPI = path.join(__dirname, "../../");
process.requireAPI = function(filePath){
  return require(path.normalize(process.rootAPI + "/" + filePath));
};

// Module files
var FakeDatabase = require("./database/FakeDatabase.js");
var PropertyProvider = process.requireAPI("lib/providers/PropertyProvider.js");
var propertyProvider = new PropertyProvider(new FakeDatabase());

describe("PropertyProvider", function(){
  
  describe("getProperties", function(){

    it("should be able to retrieve all properties", function(done){
      propertyProvider.getProperties(function(testData){
        assert.equal(testData.limit, -1);
        assert.isNull(testData.criteria);
        assert.isNull(testData.projection);
        done();
      });
    
    });

  });
  
  describe("addProperty", function(){

    it("should be able to add a new property", function(done){
      var property = {
        name : "name",  
        description : "description",  
        type : "type"
      };

      propertyProvider.addProperty(property, function(testData){
        assert.equal(testData.data.name, "name");
        assert.equal(testData.data.description, "description");
        assert.equal(testData.data.type, "type");
        done();
      });
    
    });

  });
  
  describe("updateProperty", function(){

    it("should be able to update a property", function(done){
      var property = {
        name : "name"
      };

      propertyProvider.updateProperty("25", property, function(testData){
        assert.equal(testData.criteria.id, 25);
        assert.equal(testData.data.name, "name");
        done();
      });
    
    });

  });
  
  describe("removeProperty", function(){

    it("should be able to remove a property", function(done){
      propertyProvider.removeProperty("25", function(testData){
        assert.equal(testData.criteria.id, 25);
        done();
      });
    
    });

  });  

});
