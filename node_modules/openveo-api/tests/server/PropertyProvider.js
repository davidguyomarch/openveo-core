"use strict"

var path = require("path");
var assert = require("chai").assert;

// Set module root directory
process.rootAPI = path.join(__dirname, "../../");
process.requireAPI = function(filePath){
  return require(path.normalize(process.rootAPI + "/" + filePath));
};

describe("PropertyProvider", function(){
  var propertyProvider;
  
  beforeEach(function(){
    var FakePropertyDatabase = require("./database/FakePropertyDatabase.js");
    var PropertyProvider = process.requireAPI("lib/providers/PropertyProvider.js");
    propertyProvider = new PropertyProvider(new FakePropertyDatabase());    
  });
  
  describe("getProperties", function(){

    it("Should be able to retrieve all properties", function(done){
      propertyProvider.getProperties(function(error, data){
        assert.isNull(error);
        assert.isDefined(data);
        assert.equal(data.length, 2);
        done();
      });
    
    });

  });
  
  describe("addProperty", function(){

    it("Should be able to add a new property", function(done){
      var property = {
        name : "name1",  
        description : "description",  
        type : "type"
      };

      propertyProvider.addProperty(property, function(error){
        assert.isUndefined(error);
        done();
      });
    
    });

  });
  
  describe("updateProperty", function(){

    it("Should be able to update a property", function(done){
      var property = {
        name : "name1"
      };

      propertyProvider.updateProperty(1, property, function(error){
        assert.isUndefined(error);
        done();
      });
    
    });

  });
  
  describe("removeProperty", function(){

    it("Should be able to remove a property", function(done){
      propertyProvider.removeProperty(1, function(error, data){
        assert.isUndefined(error);
        done();
      });
    
    });

  });  

});
