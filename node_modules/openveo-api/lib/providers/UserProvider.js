"use scrict"

// Module dependencies
var crypto = require("crypto");

/**
 * Creates a UserProvider to interact with database users collection.
 * @param Database database The database to interact with
 */
function UserProvider(database){
  this.database = database;
  
  if(!this.database)
    throw new Error("UserProvider needs a database");
}

module.exports = UserProvider;

/**
 * Gets a user by credentials.
 * @param String name The name of the user
 * @param String password The password of the user
 * @param Function callback The function to call when it's done
 *   - Error The error if an error occurred, null otherwise
 *   - Object The user
 */
UserProvider.prototype.getUserByCredentials = function(name, password, callback){

  // Encrypt password
  password = crypto.createHmac("sha256", "Plji9Qhu8d").update(password).digest("hex");
  
  this.database.get("users", {"username" : name, "password" : password}, { "password" : 0 }, 1, function(error, data){
    
    callback(error, data && data[0]);
  });

};

/**
 * Gets a user by id. 
 * @param String id The id of the user
 * @param Function callback The function to call when it's done
 *   - Error The error if an error occurred, null otherwise
 *   - Object The user
 */
UserProvider.prototype.getUserById = function(id, callback){
  this.database.get("users", {"id" : id}, { "password" : 0 }, 1, function(error, data){
    
    callback(error, data && data[0]);
  });
};