{
    "project": {
        "name": "OpenVeo AngularJS back end",
        "description": "AngularJS OpenVeo back end documentation",
        "version": "1.1.1"
    },
    "files": {
        "app\\client\\admin\\js\\alert\\AlertApp.js": {
            "name": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "modules": {
                "ov.alert": 1
            },
            "classes": {
                "alertService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\authentication\\AuthenticationApp.js": {
            "name": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "modules": {
                "ov.authentication": 1
            },
            "classes": {
                "authenticationService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\entity\\EntityApp.js": {
            "name": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "modules": {
                "ov.entity": 1
            },
            "classes": {
                "entityService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\i18n\\I18nApp.js": {
            "name": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "modules": {
                "ov.i18n": 1
            },
            "classes": {
                "i18nService": 1,
                "translateFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\ApplicationController.js": {
            "name": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\ApplicationService.js": {
            "name": "app\\client\\admin\\js\\ov\\ApplicationService.js",
            "modules": {},
            "classes": {
                "applicationService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\ErrorInterceptor.js": {
            "name": "app\\client\\admin\\js\\ov\\ErrorInterceptor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\HomeController.js": {
            "name": "app\\client\\admin\\js\\ov\\HomeController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\LoginController.js": {
            "name": "app\\client\\admin\\js\\ov\\LoginController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\MainController.js": {
            "name": "app\\client\\admin\\js\\ov\\MainController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\MenuService.js": {
            "name": "app\\client\\admin\\js\\ov\\MenuService.js",
            "modules": {},
            "classes": {
                "menuService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\OvApp.js": {
            "name": "app\\client\\admin\\js\\ov\\OvApp.js",
            "modules": {
                "ov": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\ProfileController.js": {
            "name": "app\\client\\admin\\js\\ov\\ProfileController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\RoleController.js": {
            "name": "app\\client\\admin\\js\\ov\\RoleController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\TruncateFilter.js": {
            "name": "app\\client\\admin\\js\\ov\\TruncateFilter.js",
            "modules": {},
            "classes": {
                "truncateFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\UserController.js": {
            "name": "app\\client\\admin\\js\\ov\\UserController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ov\\UserService.js": {
            "name": "app\\client\\admin\\js\\ov\\UserService.js",
            "modules": {},
            "classes": {
                "userService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\storage\\StorageApp.js": {
            "name": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "modules": {
                "ov.storage": 1
            },
            "classes": {
                "storageProvider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\tableForm\\tableForm.js": {
            "name": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ov.alert": {
            "name": "ov.alert",
            "submodules": {},
            "classes": {
                "alertService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 13,
            "description": "Controls alerts for the whole application.",
            "itemtype": "main"
        },
        "ov.authentication": {
            "name": "ov.authentication",
            "submodules": {},
            "classes": {
                "authenticationService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 13,
            "description": "Service to authenticate / logout or manipulate authenticated user informations.",
            "itemtype": "main"
        },
        "ov.entity": {
            "name": "ov.entity",
            "submodules": {},
            "classes": {
                "entityService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 13,
            "description": "Manage OpenVeo entities described in conf.json.",
            "itemtype": "main"
        },
        "ov.i18n": {
            "name": "ov.i18n",
            "submodules": {},
            "classes": {
                "i18nService": 1,
                "translateFilter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 283,
            "description": "Control back end internationalization.",
            "itemtype": "main"
        },
        "ov": {
            "name": "ov",
            "submodules": {},
            "classes": {
                "applicationService": 1,
                "menuService": 1,
                "truncateFilter": 1,
                "userService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 5,
            "description": "Main OpenVeo module.\n\nLoads all AngularJS dependencies and plugins modules. It also initializes formly and define routes exposed\nby OpenVeo core.",
            "itemtype": "main"
        },
        "ov.storage": {
            "name": "ov.storage",
            "submodules": {},
            "classes": {
                "storageProvider": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "line": 13,
            "description": "Helper module to manipulate local storage.",
            "itemtype": "main"
        }
    },
    "classes": {
        "alertService": {
            "name": "alertService",
            "shortname": "alertService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.alert",
            "namespace": "",
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 13,
            "description": "Defines a generic alert management system to display one or several messages."
        },
        "authenticationService": {
            "name": "authenticationService",
            "shortname": "authenticationService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.authentication",
            "namespace": "",
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 13,
            "description": "Defines an authentication service to deal with user authentication.\nExposes methods to deal with user information and to sign in or logout."
        },
        "entityService": {
            "name": "entityService",
            "shortname": "entityService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.entity",
            "namespace": "",
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 13,
            "description": "Defines an entity service to create / update or remove an entity."
        },
        "i18nService": {
            "name": "i18nService",
            "shortname": "i18nService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.i18n",
            "namespace": "",
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 13,
            "description": "Defines an internationalization service to manage string translations."
        },
        "translateFilter": {
            "name": "translateFilter",
            "shortname": "translateFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.i18n",
            "namespace": "",
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 283,
            "description": "Defines a filter to translate an id, contained inside a dictionary,\ninto the appropriated text."
        },
        "applicationService": {
            "name": "applicationService",
            "shortname": "applicationService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov",
            "namespace": "",
            "file": "app\\client\\admin\\js\\ov\\ApplicationService.js",
            "line": 5,
            "description": "Defines service to manage the web service applications."
        },
        "menuService": {
            "name": "menuService",
            "shortname": "menuService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov",
            "namespace": "",
            "file": "app\\client\\admin\\js\\ov\\MenuService.js",
            "line": 5,
            "description": "Defines a menu service to manage the menu of the application."
        },
        "truncateFilter": {
            "name": "truncateFilter",
            "shortname": "truncateFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov",
            "namespace": "",
            "file": "app\\client\\admin\\js\\ov\\TruncateFilter.js",
            "line": 5,
            "description": "Truncates a text to 35 characters and add '...' at the end of the truncated string."
        },
        "userService": {
            "name": "userService",
            "shortname": "userService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov",
            "namespace": "",
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 5,
            "description": "Defines service to manage roles and permissions."
        },
        "storageProvider": {
            "name": "storageProvider",
            "shortname": "storageProvider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.storage",
            "namespace": "",
            "file": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "line": 13,
            "description": "Defines a storage provider to help store information.\nFor now sessionStorage and localStorage are supported."
        }
    },
    "classitems": [
        {
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 21,
            "description": "Close an alert by its position in alerts array",
            "params": [
                {
                    "name": "index",
                    "description": "Position in array",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "alertService",
            "module": "ov.alert"
        },
        {
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 30,
            "description": "Close an alert",
            "params": [
                {
                    "name": "alert",
                    "description": "Alert to close",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "alertService",
            "module": "ov.alert"
        },
        {
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 41,
            "description": "Displays an alert.",
            "example": [
                "\n    // Info alert displayed for 4 seconds\n    AlertService.add('info', 'Message of the alert', 4000);\n\n    // Error alert displayed permanently\n    AlertService.add('danger', 'Message of the alert');"
            ],
            "params": [
                {
                    "name": "type",
                    "description": "The alert type (success, danger, warning or info)",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The alert message",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The timeout (in ms) before closing the alert, if not specified the alert\nwill be permanent",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "add",
            "class": "alertService",
            "module": "ov.alert"
        },
        {
            "file": "app\\client\\admin\\js\\alert\\AlertApp.js",
            "line": 75,
            "description": "Closes all opened alerts.",
            "example": [
                "\n    // Close all alerts\n    AlertService.closeAll();"
            ],
            "itemtype": "method",
            "name": "closeAll",
            "class": "alertService",
            "module": "ov.alert"
        },
        {
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 23,
            "description": "Initializes user information from local storage.",
            "class": "authenticationService",
            "module": "ov.authentication"
        },
        {
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 32,
            "description": "Signs in using the given credentials.",
            "params": [
                {
                    "name": "email",
                    "description": "The email",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The password",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The authentication promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "login",
            "class": "authenticationService",
            "module": "ov.authentication"
        },
        {
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 47,
            "description": "Logs out user.",
            "return": {
                "description": "The logout promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "logout",
            "class": "authenticationService",
            "module": "ov.authentication"
        },
        {
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 57,
            "description": "Gets user information.",
            "return": {
                "description": "The user description object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getUserInfo",
            "class": "authenticationService",
            "module": "ov.authentication"
        },
        {
            "file": "app\\client\\admin\\js\\authentication\\AuthenticationApp.js",
            "line": 67,
            "description": "Sets user information.",
            "params": [
                {
                    "name": "info",
                    "description": "The user description object or null to remove all user information\nuser information",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "setUserInfo",
            "class": "authenticationService",
            "module": "ov.authentication"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 22,
            "description": "Deletes cache of the given entity type.",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity type or null to remove all cache",
                    "type": "String",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "deleteCache",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 37,
            "description": "Adds a new Entity.",
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data description object of the entity",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "addEntity",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 50,
            "description": "Updates an entity.",
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the entity to update",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data description object of the entity",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "updateEntity",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 64,
            "description": "Removes an entity.",
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the entity to remove",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "removeEntity",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 77,
            "description": "Fetch an entity by Id.",
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The Id of the entity to fetch",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getEntity",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 89,
            "description": "Get all entities filtered by param.",
            "example": [
                "\n\n    // Get the first page of Web Service applications sorted by name with 10 applications per page\n    var params = {\n      count: 10,\n      page: 1,\n      sort: {\n        name: 1\n      }\n    };\n    getEntities('applications', params);"
            ],
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                },
                {
                    "name": "param",
                    "description": "Request parameters with a property \"filter\" with a MongoDB criteria as value, a\nproperty \"count\" with a MongoDB count as value, a property \"page\" with the expected page as value and a\nproperty \"sort\" with a MongoDB sort object as value",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getEntities",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\entity\\EntityApp.js",
            "line": 134,
            "description": "Gets all entities of a specific type.",
            "params": [
                {
                    "name": "entityType",
                    "description": "Type of entity",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getAllEntities",
            "class": "entityService",
            "module": "ov.entity"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 23,
            "description": "Adds a new dictionary, to the translation table, for the current\nlanguage.\nA dictionary is referenced by its name and contains a JSON\nrepresentation of all its translations.\nIf dictionary does not exist yet, get it from the server.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the dictionary to retrieve from\nserver",
                    "type": "String"
                },
                {
                    "name": "admin",
                    "description": "true to retrieve a dictionary for the back\noffice part (which requires authentication), false to get a\ndictionary without access restriction",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise to retrieve the dictionary",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "addDictionary",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 58,
            "description": "Removes a dictionary from cache.",
            "params": [
                {
                    "name": "name",
                    "description": "The dictionary name",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "removeDictionary",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 68,
            "description": "Gets a dictionary with all its languages or just for the specific language.",
            "params": [
                {
                    "name": "name",
                    "description": "The dictionary name",
                    "type": "String"
                },
                {
                    "name": "language",
                    "description": "An optional language to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The translations contained in the dictionary",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getDictionary",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 83,
            "description": "Gets current language.",
            "return": {
                "description": "The current language country code (e.g en-US)",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getLanguage",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 93,
            "description": "Gets supported languages.",
            "return": {
                "description": "The list of supported languages",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getLanguages",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 103,
            "description": "Tests if a language is supported.",
            "params": [
                {
                    "name": "language",
                    "description": "The language code to test",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if supported, false otherwise",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isLanguageSupported",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 119,
            "description": "Sets current language to active and the other one to inactive.",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 127,
            "description": "Sets current language.",
            "params": [
                {
                    "name": "language",
                    "description": "The current language country code (e.g en-CA)",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "setLanguage",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 141,
            "description": "Gets full name of a language by its code.",
            "params": [
                {
                    "name": "language",
                    "description": "The language code",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The language full name",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getLanguageName",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 157,
            "description": "Looks for a translation inside a translations object.",
            "example": [
                "\n    getTranslationFromDictionary('HOME.LOGIN', { 'HOME' : { 'LOGIN' : 'The translation to look for' } });"
            ],
            "params": [
                {
                    "name": "id",
                    "description": "The id to retrieve (e.g. HOME.LOGIN)",
                    "type": "String"
                },
                {
                    "name": "dictionary",
                    "description": "Translations where to look for",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The translated text corresponding to the given id\nin the translations or the unchanged id if no translation found",
                "type": "String"
            },
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 183,
            "description": "Translates the given id using current language.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the translation",
                    "type": "String"
                },
                {
                    "name": "dictionary",
                    "description": "The name of a particular dictionary if several dictionaries are loaded",
                    "type": "String",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "translate",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 230,
            "description": "Destroys I18nService cached data.",
            "itemtype": "method",
            "name": "destroy",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 239,
            "description": "Initializes supported languages.",
            "class": "i18nService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\i18n\\I18nApp.js",
            "line": 291,
            "description": "Translates an id, contained inside a dictionary, into the appropriated text.\n\n**translate** filter helps translate a dictionary id.\n\nIf id is not found in the specified dictionary for the actual language, it will search in the english version\nof the dictionary.<br/>\nIf id is not found in the dictionary, the id is not translated and will be printed as is.<br/>\n\nIf the dictionary is not specified, it will look for the id in all loaded dictionaries.<br/>\nFor each dictionary analyzed, if the id does not exist in the actual language it will try in the english\nversion of the dictionary.<br/>\nAfter all, if id is not found in any versions of the list of dictionaries, the id is not translated and will\nbe printed as is.",
            "example": [
                "\n    // Let's pretend that with have a dictionary named \"login\" with the following structure :\n    // {\n    //   \"LOGIN\" : {\n    //     \"PAGE_TITLE\" : \"Openveo - Sign In\",\n    //     \"DESCRIPTION\" : \"Login page description\",\n    //     \"LOGIN\" : \"User\",\n    //   }\n    // }\n\n    // Search for id LOGIN.DESCRIPTION in dictionary \"login\" : \"Login page description\"\n\n    // In HTML\n    // <label ng-bind=\"'LOGIN.DESCRIPTION' | translate:login\"></label>\n\n    // In JavaScript\n    $filter('translate')('LOGIN.DESCRIPTION', 'login');"
            ],
            "params": [
                {
                    "name": "id",
                    "description": "The id of the translation",
                    "type": "String"
                },
                {
                    "name": "dictionaryName",
                    "description": "An optional dictionary to prevent looking in all dictionaries",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "translate",
            "class": "translateFilter",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 5,
            "description": "Defines the user controller for the user page.",
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 10,
            "description": "Translates name and description of each scope.",
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 20,
            "description": "Removes a list of applications.",
            "params": [
                {
                    "name": "selected",
                    "description": "The list of application ids to remove",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "The reload Function to force reloading the table",
                    "type": "Function"
                }
            ],
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 33,
            "description": "Saves application.",
            "params": [
                {
                    "name": "application",
                    "description": "The application to save",
                    "type": "Object"
                },
                {
                    "name": "successCb",
                    "description": "Function to call in case of success",
                    "type": "Function"
                }
            ],
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 45,
            "description": "Adds an application.",
            "params": [
                {
                    "name": "application",
                    "description": "The application to add",
                    "type": "Object"
                },
                {
                    "name": "successCb",
                    "description": "Function to call in case of success",
                    "type": "Function"
                }
            ],
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 57,
            "description": "RIGHTS",
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationController.js",
            "line": 67,
            "description": "DATATABLE",
            "class": "applicationService",
            "module": "ov.i18n"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationService.js",
            "line": 15,
            "description": "Loads the list of scopes available for client applications.",
            "return": {
                "description": "The Http promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadScopes",
            "class": "applicationService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationService.js",
            "line": 36,
            "description": "Gets the available list of scopes for client applications.",
            "params": [
                {
                    "name": "The",
                    "description": "scopes",
                    "type": "Array"
                }
            ],
            "itemtype": "method",
            "name": "getScopes",
            "class": "applicationService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ApplicationService.js",
            "line": 46,
            "description": "Destroys applicationService cached datas.",
            "itemtype": "method",
            "name": "destroy",
            "class": "applicationService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ErrorInterceptor.js",
            "line": 5,
            "description": "Builds the error message for the given error.",
            "params": [
                {
                    "name": "error",
                    "description": "The promise error as returned by the interceptor",
                    "type": "Object"
                },
                {
                    "name": "$filter",
                    "description": "Angular filter",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The translated error message",
                "type": "String"
            },
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ErrorInterceptor.js",
            "line": 38,
            "description": "Defines an HTTP interceptor to handle all application errors.\n\nNot authorized errors (401) logs out the user while the other HTTP errors set an error message\nusing an alert.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\HomeController.js",
            "line": 5,
            "description": "Defines the back office controller for the home page.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\HomeController.js",
            "line": 27,
            "description": "Defines a controller for modal instance.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\LoginController.js",
            "line": 5,
            "description": "Defines the login controller for the login page.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\LoginController.js",
            "line": 14,
            "description": "Sets language.",
            "params": [
                {
                    "name": "language",
                    "description": "The language code (e.g fr_FR)",
                    "type": "String"
                }
            ],
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\LoginController.js",
            "line": 24,
            "description": "Signs in using the login form information (userEmail and password).\nIf user successfully signed in, redirect to the back office\nhome page. Otherwise, set the form as on error.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 5,
            "description": "Defines the main controller parent of all controllers in the\napplication. All actions not handled in partials are handled\nby the main controller.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 32,
            "description": "Logs out the user.\nRemove user information, remove all admin informations\nand broadcast a loggedOut event to children controllers.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 51,
            "description": "Replaces placeholders by corresponding values in the given string.\nFunction copied from AngularJS ngRoute.",
            "params": [
                {
                    "name": "string",
                    "description": "A string containing placeholders",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An array of parameters",
                    "type": "String"
                }
            ],
            "return": {
                "description": "interpolation of the redirect path with the parameters",
                "type": "String"
            },
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 74,
            "description": "Replaces placeholders by corresponding values in the given string.",
            "params": [
                {
                    "name": "string",
                    "description": "A string containing placeholders",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An array of parameters",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The compiled string",
                "type": "String"
            },
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 110,
            "description": "Changes the language to the given one.\nThis will reload the page due to the main menu which can't be\nreloaded.",
            "params": [
                {
                    "name": "The",
                    "description": "new language code (e.g. fr_FR)",
                    "type": "String"
                }
            ],
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MainController.js",
            "line": 130,
            "description": "Logs out the actual user.\nThis will remove user information and redirect to the login\npage.",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MenuService.js",
            "line": 15,
            "description": "Sets menu items corresponding to the actual path to active and the other menu items to inactive.",
            "itemtype": "method",
            "name": "setActiveMenuItem",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MenuService.js",
            "line": 42,
            "description": "Loads the menu from server.",
            "return": {
                "description": "The Http promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadMenu",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MenuService.js",
            "line": 62,
            "description": "Gets the menu.",
            "return": {
                "description": "The menu",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getMenu",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\MenuService.js",
            "line": 72,
            "description": "Destroys MenuService cached data.",
            "itemtype": "method",
            "name": "destroyMenu",
            "class": "menuService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\OvApp.js",
            "line": 177,
            "description": "Configures application main routes and set location mode to HTML5.",
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ProfileController.js",
            "line": 5,
            "description": "Defines the profile controller for the profile page.",
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ProfileController.js",
            "line": 14,
            "description": "Gets the list of role's names.",
            "return": {
                "description": "A comma separated role names",
                "type": "String"
            },
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ProfileController.js",
            "line": 29,
            "description": "Updates user password.",
            "params": [
                {
                    "name": "userInfo",
                    "description": "User data information",
                    "type": "Object"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\ProfileController.js",
            "line": 52,
            "description": "Saves user information.",
            "params": [
                {
                    "name": "userInfo",
                    "description": "The user information",
                    "type": "Object"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 5,
            "description": "Defines the user controller for the user page.",
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 10,
            "description": "Translates label, name and description keys of each permission.",
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 23,
            "description": "Gets the list of permissions inside a group.",
            "params": [
                {
                    "name": "model",
                    "description": "Roles model",
                    "type": "Object"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 42,
            "description": "Saves a role.",
            "params": [
                {
                    "name": "role",
                    "description": "Role data",
                    "type": "Object"
                },
                {
                    "name": "successCb",
                    "description": "Function to call in case of success",
                    "type": "Function"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 56,
            "description": "Adds a role.",
            "params": [
                {
                    "name": "role",
                    "description": "Role information",
                    "type": "Object"
                },
                {
                    "name": "successCb",
                    "description": "Function to call in case of success",
                    "type": "Function"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 70,
            "description": "Prepares permissions for HTMLCheckboxElement(s).",
            "params": [
                {
                    "name": "perms",
                    "description": "The list of permission groups",
                    "type": "Array"
                },
                {
                    "name": "rolePermissions",
                    "description": "The list of permission ids",
                    "type": "Array"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\RoleController.js",
            "line": 90,
            "description": "Removes a list of roles.",
            "params": [
                {
                    "name": "selected",
                    "description": "The list of role ids to remove",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "The reload Function to force reloading the table",
                    "type": "Function"
                }
            ],
            "class": "truncateFilter",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 5,
            "description": "Defines the user controller for the user page.",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 10,
            "description": "Adds a user.",
            "params": [
                {
                    "name": "user",
                    "description": "The user data",
                    "type": "Object"
                }
            ],
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 26,
            "description": "Removes a list of users.",
            "params": [
                {
                    "name": "selected",
                    "description": "The list of user ids to remove",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "The reload Function to force reloading the table",
                    "type": "Function"
                }
            ],
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 40,
            "description": "Saves user.",
            "params": [
                {
                    "name": "user",
                    "description": "The user data",
                    "type": "Object"
                }
            ],
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 56,
            "description": "RIGHTS",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 67,
            "description": "DATATABLE",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 106,
            "description": "FORM",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserController.js",
            "line": 153,
            "description": "FORM Add user",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 16,
            "description": "Loads the list of roles from server.",
            "return": {
                "description": "The Http promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadRoles",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 39,
            "description": "Loads the list of permissions from server.",
            "return": {
                "description": "The Http promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadPermissions",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 60,
            "description": "Gets roles.",
            "return": {
                "description": "The roles",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getRoles",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 70,
            "description": "Gets permissions.",
            "return": {
                "description": "The permissions",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getRoles",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 80,
            "description": "Destroys UserService cached data.",
            "itemtype": "method",
            "name": "destroy",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\ov\\UserService.js",
            "line": 89,
            "description": "Clears a user service cache.",
            "params": [
                {
                    "name": "type",
                    "description": "The cache element to clear or null to remove all caches",
                    "type": "String",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "cacheClear",
            "class": "userService",
            "module": "ov"
        },
        {
            "file": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "line": 32,
            "description": "Gets information from storage using the given key.",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the element to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The stored value for the given key",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getFromStorage",
            "class": "storageProvider",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "line": 43,
            "description": "Adds information to the storage.",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the element to add",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value of the element to add",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "addToStorage",
            "class": "storageProvider",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\storage\\StorageApp.js",
            "line": 54,
            "description": "Removes a key from the storage.",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the element to remove",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "removeFromStorage",
            "class": "storageProvider",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 7,
            "description": "Defines a service reload Table",
            "class": "",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 20,
            "description": "Defines a DatePicker controller.",
            "class": "",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 52,
            "description": "Defines a FormEditController.",
            "class": "",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 149,
            "description": "Defines a FormAddController.",
            "class": "",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 179,
            "description": "Defines a DataTableController.",
            "class": "",
            "module": "ov.storage"
        },
        {
            "file": "app\\client\\admin\\js\\tableForm\\tableForm.js",
            "line": 391,
            "description": "Defines a modal instance for all modals related to the table form.",
            "class": "",
            "module": "ov.storage"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\client\\admin\\js\\alert\\AlertApp.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " app\\client\\admin\\js\\alert\\AlertApp.js:30"
        },
        {
            "message": "Missing item type\nClose an alert by its position in alerts array",
            "line": " app\\client\\admin\\js\\alert\\AlertApp.js:21"
        },
        {
            "message": "Missing item type\nClose an alert",
            "line": " app\\client\\admin\\js\\alert\\AlertApp.js:30"
        },
        {
            "message": "Missing item type\nInitializes user information from local storage.",
            "line": " app\\client\\admin\\js\\authentication\\AuthenticationApp.js:23"
        },
        {
            "message": "Missing item type\nSets current language to active and the other one to inactive.",
            "line": " app\\client\\admin\\js\\i18n\\I18nApp.js:119"
        },
        {
            "message": "Missing item type\nLooks for a translation inside a translations object.",
            "line": " app\\client\\admin\\js\\i18n\\I18nApp.js:157"
        },
        {
            "message": "Missing item type\nInitializes supported languages.",
            "line": " app\\client\\admin\\js\\i18n\\I18nApp.js:239"
        },
        {
            "message": "Missing item type\nDefines the user controller for the user page.",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:5"
        },
        {
            "message": "Missing item type\nTranslates name and description of each scope.",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:10"
        },
        {
            "message": "Missing item type\nRemoves a list of applications.",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:20"
        },
        {
            "message": "Missing item type\nSaves application.",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:33"
        },
        {
            "message": "Missing item type\nAdds an application.",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:45"
        },
        {
            "message": "Missing item type\nRIGHTS",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:57"
        },
        {
            "message": "Missing item type\nDATATABLE",
            "line": " app\\client\\admin\\js\\ov\\ApplicationController.js:67"
        },
        {
            "message": "Missing item type\nBuilds the error message for the given error.",
            "line": " app\\client\\admin\\js\\ov\\ErrorInterceptor.js:5"
        },
        {
            "message": "Missing item type\nDefines an HTTP interceptor to handle all application errors.\n\nNot authorized errors (401) logs out the user while the other HTTP errors set an error message\nusing an alert.",
            "line": " app\\client\\admin\\js\\ov\\ErrorInterceptor.js:38"
        },
        {
            "message": "Missing item type\nDefines the back office controller for the home page.",
            "line": " app\\client\\admin\\js\\ov\\HomeController.js:5"
        },
        {
            "message": "Missing item type\nDefines a controller for modal instance.",
            "line": " app\\client\\admin\\js\\ov\\HomeController.js:27"
        },
        {
            "message": "Missing item type\nDefines the login controller for the login page.",
            "line": " app\\client\\admin\\js\\ov\\LoginController.js:5"
        },
        {
            "message": "Missing item type\nSets language.",
            "line": " app\\client\\admin\\js\\ov\\LoginController.js:14"
        },
        {
            "message": "Missing item type\nSigns in using the login form information (userEmail and password).\nIf user successfully signed in, redirect to the back office\nhome page. Otherwise, set the form as on error.",
            "line": " app\\client\\admin\\js\\ov\\LoginController.js:24"
        },
        {
            "message": "Missing item type\nDefines the main controller parent of all controllers in the\napplication. All actions not handled in partials are handled\nby the main controller.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:5"
        },
        {
            "message": "Missing item type\nLogs out the user.\nRemove user information, remove all admin informations\nand broadcast a loggedOut event to children controllers.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:32"
        },
        {
            "message": "Missing item type\nReplaces placeholders by corresponding values in the given string.\nFunction copied from AngularJS ngRoute.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:51"
        },
        {
            "message": "Missing item type\nReplaces placeholders by corresponding values in the given string.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:74"
        },
        {
            "message": "Missing item type\nChanges the language to the given one.\nThis will reload the page due to the main menu which can't be\nreloaded.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:110"
        },
        {
            "message": "Missing item type\nLogs out the actual user.\nThis will remove user information and redirect to the login\npage.",
            "line": " app\\client\\admin\\js\\ov\\MainController.js:130"
        },
        {
            "message": "Missing item type\nConfigures application main routes and set location mode to HTML5.",
            "line": " app\\client\\admin\\js\\ov\\OvApp.js:177"
        },
        {
            "message": "Missing item type\nDefines the profile controller for the profile page.",
            "line": " app\\client\\admin\\js\\ov\\ProfileController.js:5"
        },
        {
            "message": "Missing item type\nGets the list of role's names.",
            "line": " app\\client\\admin\\js\\ov\\ProfileController.js:14"
        },
        {
            "message": "Missing item type\nUpdates user password.",
            "line": " app\\client\\admin\\js\\ov\\ProfileController.js:29"
        },
        {
            "message": "Missing item type\nSaves user information.",
            "line": " app\\client\\admin\\js\\ov\\ProfileController.js:52"
        },
        {
            "message": "Missing item type\nDefines the user controller for the user page.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:5"
        },
        {
            "message": "Missing item type\nTranslates label, name and description keys of each permission.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:10"
        },
        {
            "message": "Missing item type\nGets the list of permissions inside a group.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:23"
        },
        {
            "message": "Missing item type\nSaves a role.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:42"
        },
        {
            "message": "Missing item type\nAdds a role.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:56"
        },
        {
            "message": "Missing item type\nPrepares permissions for HTMLCheckboxElement(s).",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:70"
        },
        {
            "message": "Missing item type\nRemoves a list of roles.",
            "line": " app\\client\\admin\\js\\ov\\RoleController.js:90"
        },
        {
            "message": "Missing item type\nDefines the user controller for the user page.",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:5"
        },
        {
            "message": "Missing item type\nAdds a user.",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:10"
        },
        {
            "message": "Missing item type\nRemoves a list of users.",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:26"
        },
        {
            "message": "Missing item type\nSaves user.",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:40"
        },
        {
            "message": "Missing item type\nRIGHTS",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:56"
        },
        {
            "message": "Missing item type\nDATATABLE",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:67"
        },
        {
            "message": "Missing item type\nFORM",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:106"
        },
        {
            "message": "Missing item type\nFORM Add user",
            "line": " app\\client\\admin\\js\\ov\\UserController.js:153"
        },
        {
            "message": "Missing item type\nDefines a service reload Table",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:7"
        },
        {
            "message": "Missing item type\nDefines a DatePicker controller.",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:20"
        },
        {
            "message": "Missing item type\nDefines a FormEditController.",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:52"
        },
        {
            "message": "Missing item type\nDefines a FormAddController.",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:149"
        },
        {
            "message": "Missing item type\nDefines a DataTableController.",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:179"
        },
        {
            "message": "Missing item type\nDefines a modal instance for all modals related to the table form.",
            "line": " app\\client\\admin\\js\\tableForm\\tableForm.js:391"
        }
    ]
}